apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
  namespace: logging
data:
  fluent.conf: |

    # Source: Tail all container logs, excluding fluentd and kibana
    <source>
      @type tail
      path /var/log/containers/*.log
      pos_file /var/log/fluentd-containers.log.pos
      exclude_path ["/var/log/containers/*fluentd*.log", "/var/log/containers/*kibana*.log"]
      tag kubernetes.*
      <parse>
        @type multi_format
        <pattern>
          format json
          time_key time
          time_type string
          time_format %Y-%m-%dT%H:%M:%S.%N%:z
        </pattern>
        <pattern>
          format regexp
          expression /^(?<time>.+) (?<stream>stdout|stderr)( (?<logtag>.))? (?<log>.*)$/
          time_format %Y-%m-%dT%H:%M:%S.%N%:z
        </pattern>
      </parse>
    </source>

    # Enrich logs with Kubernetes metadata
    <filter kubernetes.**>
      @type kubernetes_metadata
    </filter>

    # Optional JSON parsing inside `log` key
    <filter kubernetes.**>
      @type parser
      key_name log
      reserve_data true
      replace_invalid_sequence true
      emit_invalid_record_to_error false
      <parse>
        @type multi_format
        <pattern>
          format json
          time_key time
          time_type string
          time_format %Y-%m-%dT%H:%M:%S.%N%:z
        </pattern>
        <pattern>
          format none
        </pattern>
      </parse>
    </filter>

    # Output: Elasticsearch
    <match **>
      @type elasticsearch
      host elasticsearch
      port 9200
      scheme http
      user elastic
      password l9An4SZ6uinCMtKCuaZ0
      logstash_format true
      logstash_prefix fluentd
      include_tag_key true
      tag_key @log_name
      validate_elasticsearch_version false
      buffer_chunk_limit 128k
      max_record_size 100k
      flush_interval 5s
      retry_wait 1s
      max_retry_wait 30
      retry_forever
      <buffer>
        @type file
        path /var/log/fluentd-buffers/es
        flush_mode interval
        flush_interval 5s
        retry_forever
      </buffer>
    </match>
